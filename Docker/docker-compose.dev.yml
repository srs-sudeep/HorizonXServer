services:
  service:
    build:
      context: ../
      target: development
    container_name: horizonx
    restart: always
    ports:
      - "5000:8000"
    volumes:
      - ../:/app
    env_file:
      - ../envs/.env.development
    depends_on:
      - postgres
      - redis
    networks:
      - horizonx_network

  postgres:
    image: postgres:16
    container_name: horizonx_postgres
    restart: always
    env_file:
      - ../envs/.env.development
    environment:
      - POSTGRES_DB=${DB_NAME:-horizonx}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-1234}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - horizonx_network

  redis:
    image: redis:7
    container_name: horizonx_redis
    restart: always
    networks:
      - horizonx_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: horizonx_pgadmin
    restart: always
    ports:
      - "5051:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@horizonx.dev
      PGADMIN_DEFAULT_PASSWORD: adminpass
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    volumes:
      - ../pgadmin/servers.json:/pgadmin4/servers.json
      - ../pgadmin/pgpass:/pgpass
      - horizonx_pgadmin_data:/var/lib/pgadmin
    user: root
    networks:
      - horizonx_network

volumes:
  postgres_data:
  redis_data:
  horizonx_pgadmin_data:

networks:
  horizonx_network:
    driver: bridge
